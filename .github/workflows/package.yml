name: Package Extension Pack

on:
  push:
    branches:
      - main  # Trigger this action on push to the main branch. Adjust if you're using a different branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4.2.2

    - name: Set up Node.js
      uses: actions/setup-node@v4.2.0
      with:
        node-version: '20'  # Adjust the node version if needed

    - name: Install Dependencies
      run: npm install

    - name: Package Extension
      run: npx --package @vscode/vsce -- vsce package

    - name: Create GitHub Release and Upload .vsix
      run: |
        # Set GitHub token to authenticate with GitHub API
        GITHUB_TOKEN=${{ secrets.GPAT }}
        
        # Get the current version from package.json (or wherever your version is defined)
        VERSION=$(node -p "require('./package.json').version")
        
        # Create a GitHub release using the GitHub API
        curl -X POST \
          -H "Authorization: token $GITHUB_TOKEN" \
          -d '{"tag_name": "v'"$VERSION"'","name": "Release v'"$VERSION"'","body": "Description of the release","draft": false, "prerelease": false}' \
          https://api.github.com/repos/${{ github.repository }}/releases

        # Upload the .vsix file as a release asset
        curl -X POST \
          -H "Authorization: token $GITHUB_TOKEN" \
          -H "Content-Type: application/zip" \
          --data-binary @"python-official-extensions-0.0.1.vsix" \
          https://uploads.github.com/repos/${{ github.repository }}/releases/$(curl -s -H "Authorization: token $GITHUB_TOKEN" https://api.github.com/repos/${{ github.repository }}/releases/tags/v$VERSION | jq -r .id)/assets?name=python-official-extensions-0.0.1.vsix
